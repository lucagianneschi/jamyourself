/**
 * jQuery Bar Rating Plugin v1.0.4
 *
 * @link http://github.com/netboy/jquery-bar-rating
 *
 * @copyright (c) 2012-2013 Kazik Pietruszewski
 *
 * Dual licensed under the MIT and GPL licenses:
 * @link http://www.opensource.org/licenses/mit-license.php
 * @link  http://www.gnu.org/licenses/gpl.html
 */
(function($){var BarRating,root,hasTouch;root=typeof window!=="undefined"&&window!==null?window:global;hasTouch='ontouchstart'in root;root.BarRating=BarRating=(function(){function BarRating(){this.show=function(){var $this=$(this.elem),$widget,$all,userOptions=this.options,nextAllorPreviousAll,initialOption,clickEvent=hasTouch?'touchstart':'click';if(!$this.data('barrating')){if(userOptions.initialRating){initialOption=$('option[value="'+userOptions.initialRating+'"]',$this);}else{initialOption=$('option:selected',$this);}
$this.data('barrating',{currentRatingValue:initialOption.val(),currentRatingText:initialOption.text(),originalRatingValue:initialOption.val(),originalRatingText:initialOption.text()});$widget=$('<div />',{'class':'br-widget'}).insertAfter($this);$this.find('option').each(function(){var val,text,$a,$span;val=$(this).val();if(val){text=$(this).text();$a=$('<a />',{href:'#','data-rating-value':val,'data-rating-text':text});$span=$('<span />',{text:(userOptions.showValues)?text:''});$widget.append($a.append($span));}});if(userOptions.showSelectedRating){$widget.append($('<div />',{text:'','class':'br-current-rating'}));}
$this.data('barrating').deselectable=(!$this.find('option:first').val())?true:false;if(userOptions.reverse){nextAllorPreviousAll='nextAll';}else{nextAllorPreviousAll='prevAll';}
if(userOptions.reverse){$widget.addClass('br-reverse');}
if(userOptions.readonly){$widget.addClass('br-readonly');}
$widget.on('ratingchange',function(event,value,text){value=value?value:$this.data('barrating').currentRatingValue;text=text?text:$this.data('barrating').currentRatingText;$this.find('option[value="'+value+'"]').prop('selected',true);if(userOptions.showSelectedRating){$(this).find('.br-current-rating').text(text);}}).trigger('ratingchange');$widget.on('updaterating',function(event){$(this).find('a[data-rating-value="'+$this.data('barrating').currentRatingValue+'"]').addClass('br-selected br-current')[nextAllorPreviousAll]().addClass('br-selected');}).trigger('updaterating');$all=$widget.find('a');if(hasTouch||userOptions.readonly){$all.on('click',function(event){event.preventDefault();});}
if(!userOptions.readonly){$all.on(clickEvent,function(event){var $a=$(this),value,text;event.preventDefault();$all.removeClass('br-active br-selected');$a.addClass('br-selected')[nextAllorPreviousAll]().addClass('br-selected');value=$a.attr('data-rating-value');text=$a.attr('data-rating-text');if($a.hasClass('br-current')&&$this.data('barrating').deselectable){$a.removeClass('br-selected br-current')[nextAllorPreviousAll]().removeClass('br-selected br-current');value='',text='';}else{$all.removeClass('br-current');$a.addClass('br-current')}
$this.data('barrating').currentRatingValue=value;$this.data('barrating').currentRatingText=text;$widget.trigger('ratingchange');userOptions.onSelect.call(this,$this.data('barrating').currentRatingValue,$this.data('barrating').currentRatingText);return false;});if(!hasTouch){$all.on({mouseenter:function(){var $a=$(this);$all.removeClass('br-active').removeClass('br-selected');$a.addClass('br-active')[nextAllorPreviousAll]().addClass('br-active');$widget.trigger('ratingchange',[$a.attr('data-rating-value'),$a.attr('data-rating-text')]);}});$widget.on({mouseleave:function(){$all.removeClass('br-active');$widget.trigger('ratingchange').trigger('updaterating');}});}}
$this.hide();}}
this.clear=function(){var $this=$(this.elem);var $widget=$this.next('.br-widget');if($widget&&$this.data('barrating')){$widget.find('a').removeClass('br-selected br-current');$this.data('barrating').currentRatingValue=$this.data('barrating').originalRatingValue;$this.data('barrating').currentRatingText=$this.data('barrating').originalRatingText;$widget.trigger('ratingchange').trigger('updaterating');this.options.onClear.call(this,$this.data('barrating').currentRatingValue,$this.data('barrating').currentRatingText);}}
this.destroy=function(){var $this=$(this.elem);var $widget=$this.next('.br-widget');if($widget&&$this.data('barrating')){var value=$this.data('barrating').currentRatingValue;var text=$this.data('barrating').currentRatingText;$this.removeData('barrating');$widget.off().remove();$this.show();this.options.onDestroy.call(this,value,text);}}}
BarRating.prototype.init=function(options,elem){var self;self=this;self.elem=elem;return self.options=$.extend({},$.fn.barrating.defaults,options);};return BarRating;})();$.fn.barrating=function(method,options){return this.each(function(){var plugin=new BarRating();if(!$(this).is('select')){$.error('Sorry, this plugin only works with select fields.');}
if(plugin.hasOwnProperty(method)){plugin.init(options,this);return plugin[method]();}else if(typeof method==='object'||!method){options=method;plugin.init(options,this);return plugin.show();}else{$.error('Method '+method+' does not exist on jQuery.barrating');}});};return $.fn.barrating.defaults={initialRating:null,showValues:false,showSelectedRating:true,reverse:false,readonly:false,onSelect:function(value,text){},onClear:function(value,text){},onDestroy:function(value,text){}};})(jQuery);