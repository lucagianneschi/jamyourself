<?php/* ! \par		Info Generali: * \author		Luca Gianneschi * \version		1.0 * \date		2013 * \copyright		Jamyourself.com 2013 * \par			Info Classe: * \brief		box caricamento info album * \details		Recupera le informazioni dell'album, le inserisce in un array da passare alla view * \par			Commenti: * \warning * \bug * \todo		 * */if (!defined('ROOT_DIR'))    define('ROOT_DIR', '../');require_once ROOT_DIR . 'config.php';/** * \brief	AlbumBox class  * \details	box class to pass info to the view  */class AlbumBox {    public $albumArray;    public $config;    public $error;    public $imageArray;    /**     * \fn	__construct()     * \brief	class construct to import config file     */    function __construct() {	$this->config = json_decode(file_get_contents(CONFIG_DIR . "albumBox.config.json"), false);    }    /**     * \fn	initForPersonalPage($objectId, $type)     * \brief	Init AlbumBox instance for Personal Page     * \param	$objectId for user that owns the page, $type     * \todo         */    public function init($objectId, $limit = null, $skip = null) {	$this->errorManagement();    }    /**     * \fn	initForDetail($objectId $limit - optional, $skip - optional)     * \brief	Init AlbumBox instance for Personal Page, detailed view     * \param	$objectId of the album to display information      */    public function initForDetail($objectId, $limit = null, $skip = null, $updatedAt = false) {	$this->errorManagement();    }    /**     * \fn	initForUploadRecordPage($objectId)     * \brief	init for recordBox for upload record page     * \param	$objectId of the user who owns the record     */    public function initForUploadAlbumPage() {	require_once SERVICES_DIR . 'utils.service.php';	$currentUserId = sessionChecker();	if (is_null($currentUserId)) {	    $this->errorManagement(ONLYIFLOGGEDIN);	    return;	}	$this->errorManagement();    }    /**     * \fn	errorManagement($errorMessage = null)     * \brief	set values in case of error or nothing to send to the view     * \param	$errorMessage     */    private function errorManagement($errorMessage = null) {	$this->albumArray = array();	$this->config = null;	$this->error = $errorMessage;	$this->imageArray = array();    }}?>